# This workflow will build the docs using Sphinx and check for errors.

name: Compile with latexmk

on:
  push:
    branches: [ master ]
    tags:
      - 'v*'
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: write

env:
  ARTIFACT_NAME: paper
  ARTIFACT_DIR: build

jobs:
  compile:
    # Don't run on forked repos.
    if: contains(fromJson('["wenh06"]'), github.repository_owner)

    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: ["3.9"]

    steps:
    - uses: actions/checkout@v4
    - name: Clear unnecessary system components
      run: |
        echo "Free space before cleanup:"
        df -h
        sudo rm -rf /usr/local/lib/android # will release about 10 GB if you don't need Android
        sudo rm -rf /usr/share/dotnet # will release about 20GB if you don't need .NET
        sudo rm -rf /opt/ghc
        sudo rm -rf /usr/local/share/boost
        sudo rm -rf "$AGENT_TOOLSDIRECTORY"
        echo "Free space after cleanup:"
        df -h
    - name: Install system libraries
      run: |
        sudo apt update
        sudo apt install build-essential -y
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip' # caching pip dependencies
    - name: List existing Python packages
      run: |
        python -m pip list
    - name: Setup TeX Live
      uses: teatimeguest/setup-texlive-action@v3
      with:
        # version: 2020
        # List of TeXLive-packages contained in the scheme-small
        # https://trac.macports.org/wiki/TeXLivePackages
        # tlmgr info --list scheme-small
        packages: >-
          scheme-small
          rerunfilecheck
          xcolor
          hyperref
          hycolor
          infwarerr
          shipunov
          cite
          bitset
          kvsetkeys
          url
          l3kernel
          etoolbox
          psnfss
          pgf
          pdftexcmds
          hobby
          graphics-cfg
          latexconfig
          uniquecounter
          l3backend
          intcalc
          mathtools
          algorithm2e
          graphics
          kvoptions
          amsmath
          kvdefinekeys
          xurl
          booktabs
          preprint
          ifoddpage
          graphics-def
          auxhook
          caption
          bigintcalc
          pdfescape
          ltxcmds
          refcount
          multirow
          iftex
          epstopdf-pkg
          gettitlestring
          letltxmacro
          relsize
          calrsfs
          standalone
          xetex
          environ
          tocbibind
          setspace
          rsfs
          fancyhdr
          tikzmark
          titlesec
          anysize
          listings
          newtxsf
          float
          boxedminipage
          threeparttable
          pgfplots
          xstring
          newtx
          jknapltx
          arydshln
          accfonts
          addfont
          altfont
          amsfonts
          anyfontsize
          ascii-font
          bartel-chess-fonts
          bxnewfont
          cbfonts
          cbfonts-fd
          ccfonts
          combofont
          concmath-fonts
          defoldfonts
          foekfont
          font-change
          font-change-xetex
          fontawesome
          fontawesome5
          fontaxes
          fontbook
          fontch
          fontinst
          fontinstallationguide
          fontmfizz
          fontname
          fontools
          fonts-churchslavonic
          fonts-tlwg
          fontsetup
          fontsize
          fontspec
          fonttable
          fontware
          fontwrap
          gnu-freefont
          gofonts
          greek-fontenc
          hebrew-fonts
          hep-font
          hep-math-font
          iffont
          inconsolata-nerd-font
          inriafonts
          installfont
          kixfont
          kpfonts
          kpfonts-otf
          latex-fonts
          libertinus-fonts
          luafindfont
          lxfonts
          manfnt-font
          mathfont
          metafont
          metafont-beginners
          mflogo-font
          mpfonts
          musixtex-fonts
          ptex-fontmaps
          ptex-fonts
          pxfonts
          pxufont
          rit-fonts
          sansmathfonts
          sauterfonts
          starfont
          tex-font-errors-cheatsheet
          tpslifonts
          txfonts
          txfontsb
          unfonts-core
          unfonts-extra
          unicodefonttable
          uptex-fonts
          xetexfontinfo
          yfonts
          yfonts-otf
          yfonts-t1
          zxjafbfont
          zxjafont
          numericplots
          eso-pic
          siunitx
          pdflscape
          enumitem
          courier
          newpx
          diagbox
          stringenc
          bigfoot
          xkeyval
          mnsymbol
          hypdoc
          kastrup
          pict2e
          ulem
          metalogo
          dashbox
          cases
          trimspaces
          carlisle
          makeplot
          ntheorem
          l3packages
          pstricks-add
          zhnumber
          oberdiek
          translations
          multido
          imakeidx
          pdfpages
          xpatch
          footmisc
          lm
    - name: Install latexmk and extra software
      run: |
        sudo apt install latexmk -y
        sudo apt install texlive-pictures texlive-latex-extra texlive-fonts-recommended pdf2svg -y
        # sudo tlmgr install collection-fontsrecommended
        echo ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true | sudo debconf-set-selections
        sudo apt-get install ttf-mscorefonts-installer
    - name: Compile the document
      run: |
        python compile.py
        # assert there exists one pdf file in build folder
        ls build/*.pdf | wc -l | grep -q 1
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      # if is a tag, or manually triggered,
      # upload the pdf to the release
      if: startsWith(github.ref, 'refs/tags/')
      with:
        name: ${{ env.ARTIFACT_NAME }}
        path: ${{ env.ARTIFACT_DIR }}

  github-release:
    # github release and changelog
    needs: compile
    runs-on: ubuntu-20.04
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build Changelog
        id: changelog
        uses: mikepenz/release-changelog-builder-action@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.ARTIFACT_DIR }}
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          body: ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: false
          files: |
            ${{ env.ARTIFACT_DIR }}/*.pdf
          token: ${{ secrets.GITHUB_TOKEN }}
